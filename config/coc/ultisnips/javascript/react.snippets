# React snippets
# ==============

snippet fc "React functional component file" b
import React from 'react';

const `!v expand('%:t:r')` = () => {
    return (
        $0
    )
}

export default `!v expand('%:t:r')`;
endsnippet

snippet sc "Styled component declaration" b
const $1 = styled.${2:div}\`
  $0
\`
endsnippet

snippet scp "Styled components prop theme"
${props => props.theme.$0};
endsnippet

# Prop types

snippet pt "React prop types declaration" b
$1.propTypes = {
    $0
};
endsnippet

snippet pta "PropTypes.arrayOf()"
PropTypes.arrayOf($1),$0
endsnippet

snippet ptar "PropTypes.arrayOf().isRequired"
PropTypes.arrayOf($1).isRequired,$0
endsnippet

snippet ptb "PropTypes.bool"
PropTypes.bool,$0
endsnippet

snippet ptbr "PropTypes.bool.isRequired"
PropTypes.bool.isRequired,$0
endsnippet

snippet ptf "PropTypes.func"
PropTypes.func,$0
endsnippet

snippet ptfr "PropTypes.func.isRequired"
PropTypes.func.isRequired,$0
endsnippet

snippet ptn "PropTypes.number"
PropTypes.number,$0
endsnippet

snippet ptnr "PropTypes.number.isRequired"
PropTypes.number.isRequired,$0
endsnippet

snippet pts "PropTypes.string"
PropTypes.string,$0
endsnippet

snippet ptsr "PropTypes.string.isRequired"
PropTypes.string.isRequired,$0
endsnippet

snippet pto "PropTypes.object"
PropTypes.object,$0
endsnippet

snippet ptor "PropTypes.object.isRequired"
PropTypes.object.isRequired,$0
endsnippet

snippet ptsh "PropTypes.shape"
PropTypes.shape({$1}),$0
endsnippet

snippet ptshr "PropTypes.shape.isRequired"
PropTypes.shape({$1}).isRequired,$0
endsnippet

# Redux

snippet reducer "A Redux reducer definition" b
const $1Reducer = (state = $2, action) => {
	switch (action.type) {
		$0

		default:
			return state;
	}
};
endsnippet

snippet action "A Redux action creator" b
const $1 = ($2) => ({ type: $3, $2 });
endsnippet

snippet selector "A Redux selector" b
export const get$1 = state => state[STATE_KEY].$2;
endsnippet
