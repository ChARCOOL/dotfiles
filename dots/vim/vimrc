" # Modeline {
" Rules only for this file
" vim: set sw=2 ts=2 sts=2 tw=78 foldmarker={,} foldmethod=marker spell:
" }
" # Environment {

" Automatic, language-dependent indentation, syntax coloring and other functionality.
filetype indent plugin on
syntax on

let home = $HOME    " For convenience

" ## Identify platform {
silent function! MAC()
  return has('macunix')
endfunction
silent function! LINUX()
  return has('unix') && !has('macunix') && !has('win32unix')
endfunction
" }

" }
" # Plugins {

" ## Plug setup {
" Automatically install Plug
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" Initialize Plug
call plug#begin('~/.vim/plugged')
" }

" ## Install plugins {

" Nicer TMUX pane movements
Plug 'christoomey/vim-tmux-navigator'

Plug 'SirVer/ultisnips'
Plug 'mattn/emmet-vim'
Plug 'jiangmiao/auto-pairs'
Plug 'tpope/vim-repeat'   " Allows to make the repeat (.) command smarter
Plug 'tpope/vim-surround'   " Surround stuff with braces, quotes, tags, anything
Plug 'machakann/vim-highlightedyank'  " Highlight yanked text briefly

Plug 'scrooloose/nerdtree'

" FZF - fuzzy search
if executable('/usr/local/opt/fzf')
  Plug '/usr/local/opt/fzf'
else
  Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
endif
Plug 'junegunn/fzf.vim'

" Deoplete - autocompletion
if has('nvim')
  Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
else
  Plug 'Shougo/deoplete.nvim'
  Plug 'roxma/nvim-yarp'
  Plug 'roxma/vim-hug-neovim-rpc'
endif
" LanguageClient - LSP client app
Plug 'autozimu/LanguageClient-neovim', {
      \ 'branch': 'next',
      \ 'do': 'bash install.sh',
      \ }


"
" Programming
"

Plug 'tpope/vim-commentary'   " Comment stuff out easily
Plug 'sheerun/vim-polyglot'   " Syntax highlighting for most file types
Plug 'ludovicchabant/vim-gutentags'   " Manage tags file

Plug 'leafgarland/typescript-vim'
Plug 'pangloss/vim-javascript'
Plug 'maxmellon/vim-jsx-pretty'   " Nicer JSX syntax highlighting

" Plug 'vim-python/python-syntax'
Plug 'python-mode/python-mode', { 'branch': 'develop' }


" End initialization
call plug#end()

" }

" }
" # General {

nnoremap <space> <nop>
let mapleader="\<Space>"
let maplocalleader="\\"

" Integration with the system clipboard
if has('clipboard')
  if has('unnamedplus')
    " When possible, use the + register for copy/paste
    set clipboard=unnamed,unnamedplus
  else
    " On Mac and Windows, use the * register
    set clipboard=unnamed
  endif
endif

" }
" # Vim UI {

colorscheme nightowl

" }
" # Neovim {

" Neovim specific settings
if has('nvim')
  if (has("termguicolors"))
    set termguicolors
  endif

  if (empty($TMUX))
    " Use 24-bit (true-color) mode
    let $NVIM_TUI_ENABLE_TRUE_COLOR=1

    " Nvim terminal keybindings
    tnoremap <Esc> <C-\><C-n>
    tnoremap <M-[> <Esc>
    tnoremap <C-v><Esc> <Esc>
  endif
endif

" }

