# # PATH {{{

source ~/.profile

fpath=($fpath "$HOME/.zfunctions")

# }}}
# ## Env variables {{{

# Java
export PATH="$HOME/.jenv/bin:$PATH"
# eval "$(jenv init -)"
# export JAVA_HOME="$(jenv javahome)"

# Oh my zsh
export ZSH=~/.oh-my-zsh

# }}}
# # Oh my zsh {{{

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git
  composer
  laravel5
  zsh-autosuggestions
  zsh-syntax-highlighting
  fzf-zsh
)

source $ZSH/oh-my-zsh.sh

# }}}
# # Aliases {{{

alias cd..="cd .."
alias p="vendor/bin/phpunit"
alias pf="p --filter"
alias art="php artisan"
alias sudo='sudo -E'  # Use current user configs

alias vim='nvim'

# Docker compose
alias dc='docker-compose'
alias up='docker-compose up'
alias down='docker-compose down'
alias build='docker-compose build'

alias p='sudo pacman'
alias v='vim'
alias sv='sudo vim'
alias r='ranger'

# Useful alternatives/aliases
if type bat > /dev/null; then
    alias cat='bat'
fi
if type prettyping > /dev/null; then
    alias ping='prettyping --nolegend'
fi
if type fzf > /dev/null; then
    alias preview="fzf --preview 'bat --color \"always\" {}'"
    export FZF_DEFAULT_OPTS="--bind='ctrl-o:execute(nvim {})+abort'"
fi
if type ncdu > /dev/null; then
    alias du='ncdu --color dark -rr -x --exclude .git --exclude node_modules'
fi
if type tldr > /dev/null; then
    alias help='tldr'
fi
if type hub > /dev/null; then
    alias git='hub'
fi

# }}}
# ## Transmission {{{

tsm-start() { transmission-daemon ;}
tsm() { transmission-remote -l ;}
tsm-add() { transmission-remote -a "$1" ;}

# }}}
# # Visuals {{{

ZSH_THEME=""

# Set Spaceship ZSH as a prompt
autoload -U promptinit; promptinit
prompt spaceship

# Configure spaceship prompt
export SPACESHIP_PROMPT_SEPARATE_LINE=false

# Show just one directory
export SPACESHIP_DIR_TRUNC=1
export SPACESHIP_DIR_TRUNC_REPO=false

export SPACESHIP_GIT_PREFIX=''

# Package info
export SPACESHIP_DOCKER_SHOW=false
export SPACESHIP_PACKAGE_SHOW=false
export SPACESHIP_NODE_SHOW=false
export SPACESHIP_KUBECONTEXT_SHOW=false

# }}}
# # Packages {{{

# ## Virtualenvwrapper {{{

VIRTUALENVWRAPPER_PYTHON=/usr/local/opt/python@3/bin/python3
source /usr/local/bin/virtualenvwrapper_lazy.sh

# }}}

# ## Pyenv {{{

# Configuration
export PYENV_VERSION='3.7.0'
export PYENV_ROOT=$HOME/.pyenv
export PATH="$PYENV_ROOT/bin:$PATH"
export PYENV_VIRTUALENV_DISABLE_PROMPT=1

# Initialize pyenv and pyenv-virtualenv
if command -v pyenv 1>/dev/null 2>&1; then
    eval "$(pyenv init -)"
fi
if which pyenv-virtualenv-init > /dev/null; then 
    eval "$(pyenv virtualenv-init -)"
fi

# }}}

# Z
source $HOME/Programs/z/z.sh

# }}}
# # Generic {{{

# Use up/down arrow to search history
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^[[A" up-line-or-beginning-search # Up
bindkey "^[[B" down-line-or-beginning-search # Down

bindkey "[D" backward-word
bindkey "[C" forward-word

# }}}
# ## Startup {{{

# Start graphical server if i3 not already running.
if [ "$(tty)" = "/dev/tty1" ]; then
    pgrep -x i3 || exec startx
fi

# Start a tmux session
if [ -z "$TMUX" ]; then
    tmux attach -t default || tmux new -s default
fi

# }}}
# # Overview {{{
set modelines=3
# Custom folding for this file
# vim:foldmethod=marker:foldlevel=0
# }}}

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
