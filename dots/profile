#!/bin/sh

#
# Executes commands at login pre-zshrc.
#

#
# Utils
#

is_linux() { [ "$(uname)" = "Linux" ]; }
is_mac() { [ "$(uname)" = "Darwin" ]; }

#
# Applications
#

if is_mac; then
    export BROWSER='open'
else
    export BROWSER='firefox-developer-edition'
fi

if is_linux; then
    export TERMINAL="kitty --single-instance --listen-on unix:/tmp/mykitty -o allow_remote_control=yes"
else
    export TERMINAL="kitty"
fi

#
# Editors
#

export EDITOR='nvim'
export VISUAL='nvim'
export PAGER='less'

#
# Monitors, you can easily override them by overriding the environment 
# variables in `~/.config/zsh/zprofile.local` (check readme FAQ for how 
# to do this)
#

export MONITOR_PRIMARY='DVI-D-0'
export MONITOR_SECONDARY='HDMI-1'
export MONITOR_RIGHT=$MONITOR_PRIMARY
export MONITOR_LEFT=$MONITOR_SECONDARY

# Jira settings that work with the `jiraopen` command
# Customize in `~/.config/zsh/zprofile.local`
# E.g., `https://mycompany.atlassian.net`
export JIRA_URL=''
# E.g., `123` (from `rapidView` key in URL)
export JIRA_TEAM_ID=''

# GitLab Vim integration
export FUGITIVE_GITLAB_TOKEN=''

#
# Various settings used to tweak the behavior
# Can be overridden in `~/.config/zsh/zprofile.local`, for example
#

#
# Language
#

if [[ -z "$LANG" ]]; then
  export LANG='en_US.UTF-8'
fi
export LC_ALL='en_US.UTF-8'

#
# Paths
#

# Ensure path arrays do not contain duplicates.
typeset -gU cdpath fpath mailpath path

# Set the list of directories that Zsh searches for programs.
# Some directories should be added before others because they are dependencies
# of the others
path=(
  /usr/local/{bin,sbin}
  /usr/local/opt/ruby/bin
  $path
)
path=(
  /usr/local/opt/python@2/bin
  /usr/local/opt/gettext/bin
  $HOME/.config/composer/vendor/bin
  $HOME/.local/bin
  $HOME/dotfiles/bin
  /usr/local/Cellar/maven@3.2/3.2.5/bin
  $HOME/.cargo/bin
  $HOME/.poetry/bin
  $path
)

#
# Less
#

# Set the default Less options.
# Mouse-wheel scrolling has been disabled by -X (disable screen clearing).
# Remove -X and -F (exit if the content fits on one screen) to enable it.
export LESS='-F -g -i -M -R -S -w -X -z-4'

# Set the Less input preprocessor.
# Try both `lesspipe` and `lesspipe.sh` as either might exist on a system.
if (( $#commands[(i)lesspipe(|.sh)] )); then
  export LESSOPEN="| /usr/bin/env $commands[(i)lesspipe(|.sh)] %s 2>&-"
fi

export LESSHISTFILE="-"


#
# Clean up ~
#

export XDG_CONFIG_HOME="$HOME/.config"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_CACHE_HOME="$HOME/.cache"
if [ ! -w ${XDG_RUNTIME_DIR:="/run/user/$UID"} ]; then
    XDG_RUNTIME_DIR=/tmp
fi
export XDG_RUNTIME_DIR

# Xorg
export XAUTHORITY="$XDG_RUNTIME_DIR/Xauthority"

export ZDOTDIR=$XDG_CONFIG_HOME/zsh
export ZINIT_HOME=$XDG_CONFIG_HOME/zinit

export JUPYTER_CONFIG_DIR=${XDG_CONFIG_HOME:-$HOME/.config}/jupyter
export MPLCONFIGDIR=${XDG_CONFIG_HOME:-$HOME/.config}/matplotlib

export NPM_CONFIG_USERCONFIG=$XDG_CONFIG_HOME/npm/config
export NPM_CONFIG_CACHE=$XDG_CACHE_HOME/npm
export npm_config_devdir=$XDG_CONFIG_HOME/node-gyp

export NODE_REPL_HISTORY="$XDG_DATA_HOME/node_repl_history"

export XINITRC="$XDG_CONFIG_HOME/X11/xinitrc"

# Z
export ZSHZ_DATA="$XDG_DATA_HOME/z/z"

# Android
export ANDROID_SDK_HOME="$XDG_CONFIG_HOME/android"
export ANDROID_AVD_HOME="$XDG_DATA_HOME/android/"
export ANDROID_EMULATOR_HOME="$XDG_DATA_HOME/android/"
export ADB_VENDOR_KEY="$XDG_CONFIG_HOME/android"


#
# Package configurations
#

# Current user so that it can be used by docker-compose
export CURRENT_UID=$(id -u):$(id -g)

# Use a better command for searching with fzf
export FZF_DEFAULT_COMMAND='rg --files --no-ignore-vcs --hidden --ignore-file ~/.config/ripgrep/ignore'


#
# Java
#

if [[ -d "/Applications/Android Studio.app/Contents/jre/jdk/Contents/Home" ]]; then
    export JAVA_HOME="/Applications/Android Studio.app/Contents/jre/jdk/Contents/Home"
fi

# Android
if [[ -d "$HOME/Library/Android/sdk" ]]; then
    export ANDROID_SDK_ROOT=$HOME/Library/Android/sdk
    export ANDROID_HOME=$HOME/Library/Android/sdk

    path=(
      $path
      $ANDROID_SDK_ROOT/emulator
      $ANDROID_SDK_ROOT/tools
      $ANDROID_SDK_ROOT/tools/bin
      $ANDROID_SDK_ROOT/platform-tools
    )
fi

#
# NVM
#

export NVM_DIR=$XDG_CONFIG_HOME/nvm
# Only set this source in Arch Linux
if [[ -d "/usr/share/nvm" ]]; then
    export NVM_SOURCE="/usr/share/nvm"
fi


#
# Pyenv
#

export PYENV_VIRTUALENV_DISABLE_PROMPT=1


#
# Read overrides from zprofile.local
#

[[ -f ~/.config/zsh/zprofile.local ]] && source ~/.config/zsh/zprofile.local

#
# Boot
#

# Start Xorg if it makes sense to
if type systemctl > /dev/null && systemctl -q is-active graphical.target && [[ ! $DISPLAY && $XDG_VTNR -eq 1 ]]; then
    exec startx "$XDG_CONFIG_HOME/X11/xinitrc" vt
fi
